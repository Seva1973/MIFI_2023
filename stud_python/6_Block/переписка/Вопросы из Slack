Елагин Михаил
  15:48
@Константин З.
 Помогите разобраться с практическим заданием 5. Библиотека requests. Не могу понять как сформировать API запрос. Надо отправить запрос к API http://numbersapi.com/.
Для этого надо использовать POST запрос?
У нас есть входные данные:
target = str(input("Target:"))
headers = list(input("Headers (name1:value1 name2:value2 ...)").split())
payload = str(input("Payload:"))
target - понятно сам домен - http://numbersapi.com
headers - Он вообще не понятно зачем в POST запросе
payload  - в переменной payload указываются данные, которые будут передаваться в его теле. А вот тут и не понятно как это сформировать.
Я понял так(но так не работает:
target = http://numbersapi.com/
headers  пропускаю
payload = type:trivia date:10/25/ (отредактировано) 
numbersapi.comnumbersapi.com
Numbers API
An API for interesting facts about numbers.
numbersapi.comnumbersapi.com
Numbers API
An API for interesting facts about numbers.


Константин З.
  20:16
@Елагин Михаил
 Здравствуйте! При работе с API самый важный первый шаг - понять как этот API работает на принимающей стороне. Конкретно в данном случае сайт обрабатывает payload из адресной строки запроса. Payload - это не обязательно то, что находится в теле запроса. Payload может передаваться где угодно, в том числе в таком виде: http://numbersapi.com/random/date
Вы принимаете на входе параметры, а дальше собираете их каким-то таким образом: url = target+"/"+payload. Причем payload там может состоять из двух параметров (например как в примере выше: random и date), в таком случае вам их нужно разделить и засплитить слешем. И конкретно с данным сайтом нужно работать GET запросами, POST запросы он рубит.
По поводу хэдеров - в данном случае они действительно могут быть не нужны, но в post запросах вполне себе могут быть хэдеры. Да и как минимум указывать важные хэдеры типа Host, User-Agent, Connection, Content-Type и т.д. нужно всегда в любых запросах


Елагин Михаил
  5 д. назад
@Константин З.
 окончально запутался с заданием 5. Использование API
Вы говорите, что достаточно GET запроса. с ним то как раз вопросов нет. собрал вот такой урл и все - http://numbersapi.com/10/25/date
Но в задании написано:
Для самостоятельной проверки работы кода, реализованного выше, попробуйте отправить несколько запросов к API http://numbersapi.com/
http://numbersapi.com/<number>/<type>
number — число;
type — тип факта (trivia — факт из жизни, math — математический факт, date и year — вопрос про дату (в формате MM/DD) и год).
Например, получить факт о 25 октября можно по запросу:
http://numbersapi.com/10/25/date
А вот как собрать API запрос и куда его отправить на тот же 80 порт в виде POST запроса? Или GET запроса? Так GET вроде ни чего не отдаёт а просто указывает серверу, что вывести на страницу.Нет?
Тема API не раскрыта. примеров нет совсем.
Первый вариант, как я вижу, задать в target просто адрес - http://numbersapi.com/10/25/date, но тогда причём здесь API?
2. Второй подать запрос с параметрами, но тут одни вопросы
http://numbersapi.com/type:trivia date:10/25/ (отредактировано) 
numbersapi.comnumbersapi.com
Numbers API
An API for interesting facts about numbers.
:глаза:
1

7 ответов


Константин З.
  5 д. назад
@Елагин Михаил
 Михаил, добрый вечер! Ваш GET запрос - и есть запрос к API. Собирать Вам его нужно именно через урл - это самый просто вариант использования API, здесь не нужно специальный payload составлять. API - это по сути обработчик запросов, и он находится на сайте. Здесь Вы немного запутались с понятиями сервер и API. Дело в том, что API из примера работает по урлу. Какой вы ему отправите, то он и выведет. И чтобы достучаться до API Вы можете просто в адресной строке браузера ввести свой "запрос" и он Вам выдаст то же самое, что и при запросе из кода. Поэтому да, сервер Вам при запросе что из питона, что из адресной строки, выдаст одно и то же - текст на пустой страничке. И то что Вы можете достучаться до API просто из адресной строки еще не делает это API каким-то не таким)) Да, оно самое простое, даже близко не REST и т.д., но это все еще API. Разница лишь в том, что в сложном API Вы взаимодействуете с ним с помощью параметров, headerов, оно Вам  возвращает не страничку, а JSON или XML, но принцип работы тот же (и то, эта API может Вам вернуть всё в формате JSON, если укажете параметр json в конце: ?json)
Почему это называется API, если просто возвращает пустую страничку? Потому что на той стороне происходит обработка вашего запроса. И в зависимости от урлы, которую вы ему присылаете, он реагирует по-разному


Tvaliullin
  2 д. назад
@Константин З.
 Здравствуйте, Константин! А не подскажете ещё почему возникает такая ошибка:

Target: http://numbersapi.com/10/25/date
Method (GET|POST): GET
Headers (name1:value1 name2:value2 ...): 
Traceback (most recent call last):
  File "/home/tvaliullin/PycharmProjects/pythonProject/65.py", line 31, in <module>
    sent_http_request(target, method, headers, payload)
NameError: name 'payload' is not defined
А если я вот тут ставлю None - работает нормально:
sent_http_request(target, method, headers, payload=None)


Tvaliullin
  2 д. назад
Но ведь мы до этого дали определение функции так же:
def sent_http_request(target, method, headers=None, payload=None):


Елагин Михаил
  2 д. назад
Присоединяюсь. Я тоже не понял почему ругается, что payload не определена. Мы же написали, что это не обязательный аргумент.


Константин З.
  1 д. назад
@Tvaliullin
 
@Елагин Михаил
 Добрый вечер! Извиняюсь за долгое ожидание. Ошибка возникает из-за того, что в коде не определена переменная payload при GET запросе. Мы инициализируем ее только тут:
if method == "POST":
    payload = str(input("Payload:"))
При этом отсутствует 'else', который решил бы эту проблему.
А по поводу инициализации payload при определении функции - все верно, мы задаем дефолтное значение None необязательному параметру payload, однако это при условии, что он вообще не передается) А мы его передаем, таким образом None не присваивается переменной payload. Можете поэкспериментировать - уберите payload в моменте вызова функции и ошибка должна пропасть, потому что в таком случае сработает то, что мы определили в функции (т.е. присвоение переменной payload значения None)
Здесь важен приоритет: если мы не передаем эту переменную, то функция сама ее проинициализирует. Однако, если мы все же его передаем, то функция перекладывает всю ответственность на нас) Она не может залезть внутрь переменной и посмотреть что там. И в текущей ситуации у нас там ровно ничего, что и вызывает ошибку в дальнейшем
Пишите, если остались вопросы


Tvaliullin
  1 д. назад
@Константин З.
 Спасибо! Все понятно.
А если составитель задания копипастил свой код из виндового IDE - значит у него такой ошибки не было?


Константин З.
  23 ч назад
@Tvaliullin
 Добрый вечер! Почему же не было?) Просто изначально не заложено такое поведение пользователя. Считайте MVP, т.е. без обработки всех возможных вариантов поведения
